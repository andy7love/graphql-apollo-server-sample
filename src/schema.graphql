type Query {
  questions: [Question!]!
  question(id: ID!): Question
  tags: [TagFilter!]!
}

type Answer {
  id: ID!
  author: String!
  message: String!
}

type Question {
  id: ID!
  author: String!
  message: String!
  answers: [Answer!]!
  tags: [String]!
}

type TagFilter {
  tag: String!
  questionsCount: Int!
  questions: [Question!]!
}

input QuestionInput {
  author: String!
  message: String!
  tags: [String]!
}

input AnswerInput {
  author: String!
  message: String!
}

type Mutation {
  createQuestion(question: QuestionInput): Question!
  createAnswer(questionId: ID, answer: AnswerInput): Answer!
  deleteQuestion(id: ID!): Question!
}

type Subscription {
  questionChanged: Question
}
